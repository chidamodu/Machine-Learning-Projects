                                                  
##################################################
The cv_result is defaultdict(<class 'list'>, {3: [0.82, 0.73, 0.81, 0.82, 0.77], 4: [0.67, 0.77, 0.82, 0.74, 0.85], 5: [0.79, 0.83, 0.81, 0.74, 0.79], 6: [0.81, 0.8, 0.71, 0.81, 0.8], 7: [0.83, 0.83, 0.71, 0.74, 0.79], 8: [0.79, 0.77, 0.75, 0.68, 0.73], 9: [0.8, 0.83, 0.83, 0.77, 0.81], 10: [0.74, 0.8, 0.78, 0.79, 0.8], 11: [0.8, 0.83, 0.78, 0.8, 0.79], 12: [0.78, 0.8, 0.81, 0.73, 0.76]})
                                                  
##################################################
The best neighbor is [7]
                                                  
##################################################
The average f1_score is 0.78
                                                  
##################################################
Total time taken 23.766544818878174
                                                  
##################################################
The cv_result is defaultdict(<class 'list'>, {3: [0.82, 0.78, 0.82, 0.69, 0.8], 4: [0.82, 0.81, 0.79, 0.84, 0.79], 5: [0.78, 0.8, 0.81, 0.79, 0.85], 6: [0.77, 0.81, 0.82, 0.79, 0.78], 7: [0.72, 0.81, 0.78, 0.81, 0.81], 8: [0.81, 0.76, 0.8, 0.79, 0.78], 9: [0.84, 0.82, 0.77, 0.78, 0.79], 10: [0.73, 0.77, 0.84, 0.84, 0.82], 11: [0.81, 0.8, 0.81, 0.76, 0.76], 12: [0.79, 0.69, 0.78, 0.8, 0.8]})
                                                  
##################################################
The best neighbor is [9]
                                                  
##################################################
The average f1_score is 0.79
                                                  
##################################################
Total time taken 24.591941833496094
