                                                  
##################################################
The cv_result is defaultdict(<class 'list'>, {3: [0.76, 0.78, 0.76, 0.74, 0.84], 4: [0.85, 0.8, 0.72, 0.76, 0.74], 5: [0.78, 0.79, 0.81, 0.78, 0.77], 6: [0.81, 0.82, 0.67, 0.8, 0.78], 7: [0.8, 0.77, 0.82, 0.84, 0.79], 8: [0.79, 0.81, 0.82, 0.84, 0.84], 9: [0.86, 0.78, 0.8, 0.83, 0.83], 10: [0.83, 0.8, 0.79, 0.81, 0.82], 11: [0.84, 0.83, 0.81, 0.8, 0.84], 12: [0.79, 0.79, 0.83, 0.79, 0.79]})
                                                  
##################################################
The best neighbor is [9]
                                                  
##################################################
The average f1_score is 0.8
                                                  
##################################################
Total time taken 28.394057989120483
                                                  
##################################################
The cv_result is defaultdict(<class 'list'>, {3: [0.83, 0.77, 0.77, 0.84, 0.64], 4: [0.82, 0.82, 0.8, 0.78, 0.78], 5: [0.82, 0.8, 0.8, 0.84, 0.76], 6: [0.81, 0.78, 0.74, 0.8, 0.85], 7: [0.74, 0.78, 0.84, 0.82, 0.81], 8: [0.82, 0.81, 0.71, 0.8, 0.8], 9: [0.8, 0.77, 0.79, 0.81, 0.82], 10: [0.76, 0.79, 0.8, 0.83, 0.78], 11: [0.82, 0.83, 0.78, 0.79, 0.82], 12: [0.81, 0.81, 0.78, 0.8, 0.85]})
                                                  
##################################################
The best neighbor is [3]
                                                  
##################################################
The average f1_score is 0.8
                                                  
##################################################
Total time taken 25.559566736221313
